// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCrawler.Entities;

#nullable disable

namespace WebCrawler.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NodeLink", b =>
                {
                    b.Property<int>("LinkedNodeId")
                        .HasColumnType("int");

                    b.Property<int>("NodeId")
                        .HasColumnType("int");

                    b.HasKey("LinkedNodeId", "NodeId");

                    b.HasIndex("NodeId");

                    b.ToTable("NodeLink");
                });

            modelBuilder.Entity("WebCrawler.Entities.ExecutionRecord", b =>
                {
                    b.Property<int>("ExecutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ExecutionStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<int>("SiteRecordId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ExecutionId");

                    b.HasIndex("SiteRecordId");

                    b.ToTable("Executions");
                });

            modelBuilder.Entity("WebCrawler.Entities.Node", b =>
                {
                    b.Property<int>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ExecutionRecordId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeCrawled")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("NodeId");

                    b.HasIndex("ExecutionRecordId");

                    b.ToTable("Nodes");
                });

            modelBuilder.Entity("WebCrawler.Entities.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("SiteRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TagId");

                    b.HasIndex("SiteRecordId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("WebCrawler.Entities.WebSiteRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BoundaryRegExp")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CurrentExecutionStatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PeriodicityMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("WebSiteRecords");
                });

            modelBuilder.Entity("NodeLink", b =>
                {
                    b.HasOne("WebCrawler.Entities.Node", null)
                        .WithMany()
                        .HasForeignKey("LinkedNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebCrawler.Entities.Node", null)
                        .WithMany()
                        .HasForeignKey("NodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebCrawler.Entities.ExecutionRecord", b =>
                {
                    b.HasOne("WebCrawler.Entities.WebSiteRecord", "SiteRecord")
                        .WithMany("Executions")
                        .HasForeignKey("SiteRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiteRecord");
                });

            modelBuilder.Entity("WebCrawler.Entities.Node", b =>
                {
                    b.HasOne("WebCrawler.Entities.ExecutionRecord", "ExecutionRecord")
                        .WithMany("Nodes")
                        .HasForeignKey("ExecutionRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExecutionRecord");
                });

            modelBuilder.Entity("WebCrawler.Entities.Tag", b =>
                {
                    b.HasOne("WebCrawler.Entities.WebSiteRecord", "SiteRecord")
                        .WithMany("Tags")
                        .HasForeignKey("SiteRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiteRecord");
                });

            modelBuilder.Entity("WebCrawler.Entities.ExecutionRecord", b =>
                {
                    b.Navigation("Nodes");
                });

            modelBuilder.Entity("WebCrawler.Entities.WebSiteRecord", b =>
                {
                    b.Navigation("Executions");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
